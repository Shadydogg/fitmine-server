const supabase = require('./supabase');

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç Google —Ç–æ–∫–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É google_tokens
 * –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–ª–∞–≥ google_connected –≤ —Ç–∞–±–ª–∏—Ü–µ users
 * @param {string} telegram_id
 * @param {object} tokens ‚Äî { access_token, refresh_token, scope, token_type, expires_in }
 * @returns {Promise<{ error: any }>}
 */
async function storeGoogleToken(telegram_id, tokens) {
  if (!telegram_id || !tokens?.access_token) {
    console.error('‚ùå storeGoogleToken: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
    return { error: 'Missing telegram_id or access_token' };
  }

  const expire_at = new Date(Date.now() + tokens.expires_in * 1000).toISOString();

  // üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω—ã –≤ google_tokens (upsert –ø–æ telegram_id)
  const { error: tokenError } = await supabase
    .from('google_tokens')
    .upsert({
      telegram_id,
      access_token: tokens.access_token,
      refresh_token: tokens.refresh_token,
      scope: tokens.scope,
      token_type: tokens.token_type,
      expire_at,
      updated_at: new Date().toISOString()
    }, {
      onConflict: 'telegram_id' // ‚ùóÔ∏è –¢—Ä–µ–±—É–µ—Ç UNIQUE constraint –ø–æ telegram_id
    });

  if (tokenError) {
    console.error('‚ùå storeGoogleToken: –û—à–∏–±–∫–∞ Supabase –ø—Ä–∏ upsert —Ç–æ–∫–µ–Ω–æ–≤:', tokenError);
    return { error: tokenError };
  }

  // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ñ–ª–∞–≥–æ–º google_connected = true
  const { error: userError } = await supabase
    .from('users')
    .upsert({
      telegram_id,
      google_connected: true,
      updated_at: new Date().toISOString()
    }, {
      onConflict: 'telegram_id'
    });

  if (userError) {
    console.error('‚ö†Ô∏è storeGoogleToken: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å google_connected:', userError);
    return { error: userError };
  }

  console.log(`‚úÖ storeGoogleToken: –¢–æ–∫–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ google_connected = true –¥–ª—è ${telegram_id}`);
  return { error: null };
}

module.exports = storeGoogleToken;
